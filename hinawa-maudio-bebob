#!/usr/bin/env python3

import sys
import time
from math import log10

from bebob.bebob_maudio import BebobMaudio

from ta1394.audio import AvcAudio

argv = sys.argv
argc = len(argv)

if argc < 2:
    print('help')
    sys.exit()

card = argv[1]

unit = BebobMaudio('/dev/snd/hwC{0}D0'.format(card))

for i in range(1, 8):
    try:
        print(i, AvcAudio.get_selector_state(unit.fcp, 0, 'current', i))
    except Exception as e:
        print(e)

for i in range(1, 16):
    try:
        print(i, AvcAudio.get_feature_mute_state(unit.fcp, 0, 'current', i, 0))
    except Exception as e:
        print(e)

for i in range(1, 16):
    try:
        print(i, AvcAudio.get_feature_volume_state(unit.fcp, 0, 'current', i, 0))
    except Exception as e:
        print(e)

for i in range(1, 16):
    try:
        print(i, AvcAudio.get_feature_lr_state(unit.fcp, 0, 'current', i, 0))
    except Exception as e:
        print(e)

print('{0:04x}'.format(AvcAudio.get_processing_mixer_state(unit.fcp, 0, 'current', 1, 3, 1, 1)))
print('{0:04x}'.format(AvcAudio.get_processing_mixer_state(unit.fcp, 0, 'current', 1, 3, 2, 2)))
print('{0:04x}'.format(AvcAudio.get_processing_mixer_state(unit.fcp, 0, 'current', 1, 4, 1, 1)))
print('{0:04x}'.format(AvcAudio.get_processing_mixer_state(unit.fcp, 0, 'current', 1, 4, 2, 2)))
print('{0:04x}'.format(AvcAudio.get_processing_mixer_state(unit.fcp, 0, 'current', 1, 0, 1, 1)))
print('{0:04x}'.format(AvcAudio.get_processing_mixer_state(unit.fcp, 0, 'current', 1, 0, 2, 2)))
print('{0:04x}'.format(AvcAudio.get_processing_mixer_state(unit.fcp, 0, 'current', 1, 2, 1, 1)))
print('{0:04x}'.format(AvcAudio.get_processing_mixer_state(unit.fcp, 0, 'current', 1, 2, 2, 2)))

print(AvcAudio.get_processing_mixer_state_all(unit.fcp, 0, 'current', 1, 2))
print(AvcAudio.get_processing_mixer_state_all(unit.fcp, 0, 'minimum', 1, 2))
print(AvcAudio.get_processing_mixer_state_all(unit.fcp, 0, 'maximum', 1, 2))
print(AvcAudio.get_processing_mixer_state_all(unit.fcp, 0, 'resolution', 1, 2))
print(AvcAudio.get_processing_mixer_state_all(unit.fcp, 0, 'default', 1, 2))

for i in range(0, 100):
    meters = unit.get_metering()
    for i in range(len(unit.hoge)):
        vol = meters[i]
        if vol == 0:
            db = -144
        else:
            db = int(20 * log10(vol / 0x80000000))
        print('{0: >15}: {1: >8}'.format(unit.hoge[i], db))
    print('{0:08x}'.format(meters[-1]))
    time.sleep(0.2)
