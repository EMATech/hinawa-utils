#!/usr/bin/env python3

from bridgeco.plug_parser import PlugParser

import sys
import json

argv = sys.argv
argc = len(argv)

if argc < 3:
    print('arguments:')
    print(' 1: the number of firewire character device (/dev/fw*)')
    print(' 2: dump mode (0: id-only, 1: whole as json)')
    sys.exit()

path = '/dev/fw{0}'.format(argv[1])
mode = int(argv[2])
unit = PlugParser(path)

def dump_plug_info_to_stdio_as_json(unit):
    info = {
        'unit': unit.unit_plugs,
        'subunit': unit.subunit_plugs,
        'function-block': unit.function_block_plugs,
        'stream-formats': unit.stream_formats,
    }
    print(json.dumps(info))

def dump_plug_info_to_stdio_as_ids_only(unit):
    for type, dir_plugs in unit.unit_plugs.items():
        for dir, plugs in dir_plugs.items():
            for i, plug in enumerate(plugs):
                print(type, dir, i, plug['name'])

    for type, dir_plugs in unit.subunit_plugs.items():
        for dir, plugs in dir_plugs.items():
            for i, plug in enumerate(plugs):
                print(type, dir, i, plug['name'])

    for type, fb_type_plugs in unit.function_block_plugs.items():
        for fb_type, fb_id_plugs in fb_type_plugs.items():
            for fb_id, dir_plugs in enumerate(fb_id_plugs):
                for dir, plugs in dir_plugs.items():
                    for i, plug in enumerate(plugs):
                        print(type, fb_type, fb_id + 1, dir, i, plug['name'])

    for type, dir_fmts in unit.stream_formats.items():
        for dir, fmts in dir_fmts.items():
            for i, entries in enumerate(fmts):
                for j, entry in enumerate(entries):
                    print(type, dir, i, j, entry['type'])

if mode == 0:
    dump_plug_info_to_stdio_as_ids_only(unit)
else:
    dump_plug_info_to_stdio_as_json(unit)

sys.exit()

